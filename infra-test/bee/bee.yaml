---
# Source: bee/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bee
  namespace: infra-test
  labels:

    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: bee/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bee
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  .bee.yaml: |+
    api-addr: :8080
    bootnode: /dns4/bee-0-headless.infra-test.svc.cluster.local/tcp/7070/p2p/16Uiu2HAmG2gGvxxwYfpGjY8oGGp2oW66qPMvkikyqUeVDAEke1Ma
    clef-signer-enable: false
    clef-signer-endpoint: 
    cors-allowed-origins: 
    data-dir: /home/bee/.bee
    db-capacity: 5e+06
    debug-api-addr: :6060
    debug-api-enable: true
    gateway-mode: true
    global-pinning-enable: false
    nat-addr: 
    network-id: 3
    password-file: /home/bee/.secret/password
    payment-threshold: 100000
    payment-tolerance: 10000
    p2p-addr: :7070
    p2p-quic-enable: false
    p2p-ws-enable: false
    resolver-options: https://cloudflare-eth.com
    standalone: false
    swap-enable: true
    swap-endpoint: http://geth-swap.infra-test-geth:8545
    swap-factory-address: 0x657241f4494a2f15ba75346e691d753a978c72df
    swap-initial-deposit: 1e+18
    tracing-enable: true
    tracing-endpoint: jaeger-operator-jaeger-agent.observability:6831
    tracing-service-name: bee
    verbosity: 5
    welcome-message: Welcome to the Swarm, you are Bee-ing connected!
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-0-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-0
    endpoint: debug
    app: bee
    release: bee
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-0
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-1-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-1
    endpoint: debug
    app: bee
    release: bee
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-1
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-2-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-2
    endpoint: debug
    app: bee
    release: bee
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-2
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-3-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-3
    endpoint: debug
    app: bee
    release: bee
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-3
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4
    endpoint: debug
    app: bee
    release: bee
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-4
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
    - name: debug
      port: 6060
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
  type: ClusterIP

# PER POD P2P HEADLESS
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-0-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-0
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-0
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-1-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-1
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-1
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-2-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-2
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-2
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-3-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-3
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-3
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-headless
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-4
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-0-p2p
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-0
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-0
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-1-p2p
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-1
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-1
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-2-p2p
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-2
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-2
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-3-p2p
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-3
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-3
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-p2p
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 7070
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-4
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: api
      port: 80
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
  type: ClusterIP

# PER POD SERVICE
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-0
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-0
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-0
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-1
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-1
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-1
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-2
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-2
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-2
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-3
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-3
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-3
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    statefulset.kubernetes.io/pod-name: bee-4
---
# Source: bee/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bee
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: bee-headless
  podManagementPolicy: OrderedReady
  replicas: 5
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: bee
      app.kubernetes.io/instance: bee
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bee
        app.kubernetes.io/instance: bee
    spec:
      serviceAccountName: bee
      securityContext:
        fsGroup: 999
      nodeSelector:
        node-group: bee-dynamic
      initContainers:
        - name: init-libp2p
          image: busybox:1.28
          command:
            - sh
            - -c
            - >
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              mkdir -p /home/bee/.bee/keys;
              chown -R 999:999 /home/bee/.bee/keys;
              export KEY=$(cat /tmp/bee/libp2p.map | grep bee-${INDEX}: | cut -d' ' -f2);
              if [ -z "${KEY}" ]; then exit 0; fi;
              printf '%s' "${KEY}" > /home/bee/.bee/keys/libp2p.key;
              echo 'node initialization done';
          volumeMounts:
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-libp2p
              mountPath: /tmp/bee
        - name: init-swarm
          image: busybox:1.28
          command:
            - sh
            - -c
            - >
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              mkdir -p /home/bee/.bee/keys;
              chown -R 999:999 /home/bee/.bee/keys;
              export KEY=$(cat /tmp/bee/swarm.map | grep bee-${INDEX}: | cut -d' ' -f2);
              if [ -z "${KEY}" ]; then exit 0; fi;
              printf '%s' "${KEY}" > /home/bee/.bee/keys/swarm.key;
              echo 'node initialization done';
          volumeMounts:
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-swarm
              mountPath: /tmp/bee
      containers:
        - name: bee
          image: "ethersphere/bee:latest"
          imagePullPolicy: Always
          command:
            - bee
            - start
            - --config=.bee.yaml
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
            - containerPort: 7070
              name: p2p
              protocol: TCP
            - containerPort: 6060
              name: debug
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: debug
            initialDelaySeconds: 25
          readinessProbe:
            httpGet:
              path: /readiness
              port: debug
            initialDelaySeconds: 25
          resources:
            limits:
              cpu: 1.5
              memory: 2Gi
            requests:
              cpu: 0.75
              memory: 1Gi
          securityContext:
            {}
          volumeMounts:
            - name: config
              mountPath: /home/bee/.bee.yaml
              readOnly: true
              subPath: .bee.yaml
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-secret
              mountPath: /home/bee/.secret
              readOnly: true
      volumes:
        - name: config-file
          emptyDir: {}
        - name: config
          configMap:
            name: bee
        - name: bee-secret
          secret:
            secretName: bee-password
            items:
              - key: password
                path: password
        - name: bee-libp2p
          secret:
            secretName: bee-libp2pkeys
            items:
              - key: libp2pKeys
                path: libp2p.map
        - name: bee-swarm
          secret:
            secretName: bee-swarmkeys
            items:
              - key: swarmKeys
                path: swarm.map
        - name: data
          emptyDir: {}
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-0-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: bee-0-debug.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-0-debug
              servicePort: debug
    - host: bee-0-debug.bee.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-0-debug
              servicePort: debug
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-1-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: bee-1-debug.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-1-debug
              servicePort: debug
    - host: bee-1-debug.bee.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-1-debug
              servicePort: debug
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-2-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: bee-2-debug.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-2-debug
              servicePort: debug
    - host: bee-2-debug.bee.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-2-debug
              servicePort: debug
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-3-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: bee-3-debug.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-3-debug
              servicePort: debug
    - host: bee-3-debug.bee.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-3-debug
              servicePort: debug
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-4-debug
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  rules:
    - host: bee-4-debug.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-4-debug
              servicePort: debug
    - host: bee-4-debug.bee.infra-test.internal
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-4-debug
              servicePort: debug
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee
              servicePort: 80

# PER POD INGRESS
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-0
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee-0.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-0
              servicePort: api
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-1
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee-1.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-1
              servicePort: api
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-2
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee-2.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-2
              servicePort: api
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-3
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee-3.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-3
              servicePort: api
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bee-4
  namespace: infra-test
  labels:
    helm.sh/chart: bee-0.5.16
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: bee-4.gateway.infra-test.ethswarm.org
      http:
        paths:
          - path: /
            backend:
              serviceName: bee-4
              servicePort: api
---
# Source: bee/templates/ingress-debug.yaml
# PER POD INGRESS
---
# Source: bee/templates/ingress.yaml
# MAIN INGRESS
---
# Source: bee/templates/service.yaml
# MAIN SERVICE

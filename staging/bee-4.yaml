---
# Source: bee/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bee-4
  namespace: staging
  labels:

    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: bee/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bee-4
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
data:
  .bee.yaml: |+
    api-addr: :1633
    block-time: 15
    bootnode: /dnsaddr/staging.ethswarm.org
    bootnode-mode: false
    clef-signer-enable: false
    clef-signer-endpoint: 
    cors-allowed-origins: 
    data-dir: /home/bee/.bee
    cache-capacity: 1e+06
    db-open-files-limit: 200
    db-block-cache-capacity: 3.3554432e+07
    db-write-buffer-size: 3.3554432e+07
    db-disable-seeks-compaction: false
    debug-api-addr: :1635
    debug-api-enable: true
    full-node: true
    gateway-mode: true
    global-pinning-enable: false
    nat-addr: 
    network-id: 5
    password-file: /home/bee/.secret/password
    payment-early: 1e+12
    payment-threshold: 1e+13
    payment-tolerance: 5e+13
    postage-stamp-address: 
    price-oracle-address: 
    p2p-addr: :1634
    p2p-quic-enable: false
    p2p-ws-enable: false
    resolver-options: https://cloudflare-eth.com
    standalone: false
    swap-enable: true
    swap-endpoint: wss://goerli.infura.io/ws/v3/3e88bb0189ea44c0904699e0dfff5641
    swap-factory-address: 
    swap-legacy-factory-addresses: 
    swap-deployment-gas-price: 1.5e+12
    swap-initial-deposit: 1e+18
    tracing-enable: true
    tracing-endpoint: jaeger-operator-jaeger-agent.observability:6831
    tracing-service-name: bee
    verbosity: 5
    welcome-message: Welcome to the Swarm, you are Bee-ing connected!
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-0-debug
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4-0
    endpoint: debug
    app: bee
    release: bee-4
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 1635
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    statefulset.kubernetes.io/pod-name: bee-4-0
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-headless
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: api
      port: 1633
      protocol: TCP
      targetPort: api
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
    - name: debug
      port: 1635
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
  type: ClusterIP

# PER POD P2P HEADLESS
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-0-headless
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4-0
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    statefulset.kubernetes.io/pod-name: bee-4-0
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-0-p2p
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4-0
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
      nodePort: 31004
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    statefulset.kubernetes.io/pod-name: bee-4-0
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: api
      port: 80
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
  type: ClusterIP

# PER POD SERVICE
---
# Source: bee/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-4-0
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
    pod: bee-4-0
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 1633
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    statefulset.kubernetes.io/pod-name: bee-4-0
---
# Source: bee/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bee-4
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: bee-4-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: bee
      app.kubernetes.io/instance: bee-4
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bee
        app.kubernetes.io/instance: bee-4
    spec:
      serviceAccountName: bee-4
      securityContext:
        fsGroup: 999
      nodeSelector:
        node-group: staging
      initContainers:
        - name: init-libp2p
          image: ethersphere/busybox:1.33
          command:
            - sh
            - -c
            - >
              export INDEX=$(echo $(hostname) | cut -d'-' -f2-);
              mkdir -p /home/bee/.bee/keys;
              chown -R 999:999 /home/bee/.bee/keys;
              export KEY=$(cat /tmp/bee/libp2p.map | grep bee-${INDEX}: | cut -d' ' -f2);
              if [ -z "${KEY}" ]; then exit 0; fi;
              printf '%s' "${KEY}" > /home/bee/.bee/keys/libp2p.key;
              echo 'node initialization done';
          volumeMounts:
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-libp2p
              mountPath: /tmp/bee
        - name: init-natport
          image: ethersphere/busybox:1.33
          command:
            - sh
            - -c
            - >
              PUBLIC_IP=$(wget -T 2 http://169.254.169.254/latest/meta-data/public-ipv4 -q -O -);
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              NAT_PORT=$(( 31004 + INDEX ));
              cp -p /tmp/.bee.yaml /home/bee/.bee.yaml;
              printf 'nat-addr: %s:%s\n' "${PUBLIC_IP}" "${NAT_PORT}" >> /home/bee/.bee.yaml;
              echo 'node initialization done';
          volumeMounts:
            - name: config-file
              mountPath: /home/bee
            - name: config
              mountPath: /tmp/.bee.yaml
              subPath: .bee.yaml
      containers:
        - name: bee
          image: "ethersphere/bee@sha256:33fc204db587b43af194ea8eac20a3d43f3aa6274afa539dbc3c54726f9e4d1e"
          imagePullPolicy: Always
          command:
            - bee
            - start
            - --config=.bee.yaml
          ports:
            - containerPort: 1633
              name: api
              protocol: TCP
            - containerPort: 1634
              name: p2p
              protocol: TCP
            - containerPort: 1635
              name: debug
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: debug
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /readiness
              port: debug
            initialDelaySeconds: 20
          resources:
            limits:
              cpu: 1.5
              memory: 2Gi
            requests:
              cpu: 0.75
              memory: 1Gi
          securityContext:
            {}
          volumeMounts:
            - name: config-file
              mountPath: /home/bee
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-secret
              mountPath: /home/bee/.secret
              readOnly: true
      volumes:
        - name: config-file
          emptyDir: {}
        - name: config
          configMap:
            name: bee-4
        - name: bee-secret
          secret:
            secretName: bee-password
            items:
              - key: password
                path: password
        - name: bee-libp2p
          secret:
            secretName: bee-libp2pkeys
            items:
              - key: libp2pKeys
                path: libp2p.map
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        helm.sh/chart: bee
        app.kubernetes.io/name: bee
        app.kubernetes.io/instance: bee-4
        app.kubernetes.io/version: "latest"
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "34Gi"
      storageClassName: "local-storage"
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bee-4-0-debug
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx-internal
  rules:
    - host: bee-4-0-debug.staging.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bee-4-0-debug
                port:
                  name: debug
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bee-4
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    nginx.ingress.kubernetes.io/limit-rpm: "5"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:  
    - hosts:
        - bee-4.staging.ethswarm.org
      secretName: staging-ethswarm-org-wildcard-cert
  ingressClassName: nginx
  rules:
    - host: bee-4.staging.ethswarm.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bee-4
                port:
                  number: 80

# PER POD INGRESS
---
# Source: bee/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bee-4-0
  namespace: staging
  labels:
    helm.sh/chart: bee-0.9.12
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-4
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/affinity-mode: persistent
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    nginx.ingress.kubernetes.io/limit-rpm: "5"
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "7200"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "7200"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($scheme = http) {
        return 301 https://$server_name$request_uri;
      }
      location = / {
        proxy_pass https://ethswarm-core.s3.amazonaws.com/gateway/index.html;
      }
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
    nginx.ingress.kubernetes.io/session-cookie-name: SWARMGATEWAY
    nginx.ingress.kubernetes.io/session-cookie-path: default
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - bee-4-0.staging.ethswarm.org
      secretName: staging-ethswarm-org-wildcard-cert
  ingressClassName: nginx
  rules:
    - host: bee-4-0.staging.ethswarm.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bee-4-0
                port:
                  name: api
---
# Source: bee/templates/ingress-debug.yaml
# PER POD INGRESS
---
# Source: bee/templates/ingress.yaml
# MAIN INGRESS
---
# Source: bee/templates/service.yaml
# MAIN SERVICE

---
# Source: bee/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bee-9
  namespace: staging
  labels:

    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: bee/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bee-9
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
data:
  .bee.yaml: |+
    api-addr: :1633
    bootnode: /dnsaddr/staging.ethswarm.org
    debug-api-addr: :1635
    debug-api-enable: true
    full-node: true
    mainnet: false
    network-id: 5
    p2p-addr: :1634
    resolver-options: https://cloudflare-eth.com
    swap-endpoint: ws://goerli-geth-2.goerli-geth-2:8546
    swap-initial-deposit: 1e+18
    tracing-enable: true
    tracing-endpoint: tempo-tempo-distributed-distributor.observability:6831
    tracing-service-name: staging
    verbosity: 5
    password-file: /home/bee/.secret/password
---
# Source: bee/templates/service-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: api
      port: 80
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
  type: ClusterIP

# PER POD SERVICE
---
# Source: bee/templates/service-api.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9-0
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
    pod: bee-9-0
    endpoint: api
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 1633
      protocol: TCP
      targetPort: api
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    statefulset.kubernetes.io/pod-name: bee-9-0
---
# Source: bee/templates/service-debug.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9-0-debug
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
    pod: bee-9-0
    endpoint: debug
    app: bee
    release: bee-9
spec:
  type: ClusterIP
  ports:
    - name: debug
      port: 1635
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    statefulset.kubernetes.io/pod-name: bee-9-0
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9-headless
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  clusterIP: None
  ports:
    - name: api
      port: 1633
      protocol: TCP
      targetPort: api
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
    - name: debug
      port: 1635
      protocol: TCP
      targetPort: debug
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
  type: ClusterIP

# PER POD P2P HEADLESS
---
# Source: bee/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9-0-headless
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
    pod: bee-9-0
    endpoint: p2p
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    statefulset.kubernetes.io/pod-name: bee-9-0
---
# Source: bee/templates/service-p2p.yaml
apiVersion: v1
kind: Service
metadata:
  name: bee-9-0-p2p
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
    pod: bee-9-0
    endpoint: p2p
spec:
  type: NodePort
  externalTrafficPolicy: Local
  ports:
    - name: p2p
      port: 1634
      protocol: TCP
      targetPort: p2p
      nodePort: 31009
  selector:
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    statefulset.kubernetes.io/pod-name: bee-9-0
---
# Source: bee/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bee-9
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: bee-9-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: bee
      app.kubernetes.io/instance: bee-9
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bee
        app.kubernetes.io/instance: bee-9
        labelFilter: bee-staging
      annotations:
        grafana.io/promtail: "true"
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: bee-9
      securityContext:
        fsGroup: 999
      nodeSelector:
        node-group: staging
      initContainers:
        - name: init-libp2p
          image: ethersphere/busybox:1.33
          command:
            - sh
            - -c
            - >
              mkdir -p /home/bee/.bee/keys;
              chown -R 999:999 /home/bee/.bee/keys;
              export KEY=$(cat /tmp/bee/libp2p.map | grep $(hostname): | cut -d' ' -f2);
              if [ -z "${KEY}" ]; then exit 0; fi;
              printf '%s' "${KEY}" > /home/bee/.bee/keys/libp2p.key;
              echo 'node initialization done';
          volumeMounts:
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-libp2p
              mountPath: /tmp/bee
        - name: init-natport
          image: ethersphere/busybox:1.33
          command:
            - sh
            - -c
            - >
              PUBLIC_IP=$(wget -T 2 http://169.254.169.254/latest/meta-data/public-ipv4 -q -O -);
              export INDEX=$(echo $(hostname) | rev | cut -d'-' -f 1 | rev);
              NAT_PORT=$(( 31009 + INDEX ));
              cp -p /tmp/.bee.yaml /home/bee/.bee.yaml;
              printf 'nat-addr: %s:%s\n' "${PUBLIC_IP}" "${NAT_PORT}" >> /home/bee/.bee.yaml;
              echo 'node initialization done';
          volumeMounts:
            - name: config-file
              mountPath: /home/bee
            - name: config
              mountPath: /tmp/.bee.yaml
              subPath: .bee.yaml
      containers:
        - name: bee
          image: "ethersphere/bee@sha256:4032358c0de3666163ffa3b277606dd65943c366dc61b028bc20cc1f94d8e79b"
          imagePullPolicy: Always
          env:
            - name: BEE_TRACING_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: BEE_TRACING_PORT
              value: "6831"
          command:
            - bee
            - start
            - --config=.bee.yaml
          ports:
            - containerPort: 1633
              name: api
              protocol: TCP
            - containerPort: 1634
              name: p2p
              protocol: TCP
            - containerPort: 1635
              name: debug
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: debug
            initialDelaySeconds: 20
          readinessProbe:
            httpGet:
              path: /readiness
              port: debug
            initialDelaySeconds: 20
          resources:
            limits:
              cpu: 1.5
              memory: 2Gi
            requests:
              cpu: 0.75
              memory: 1Gi
          securityContext:
            {}
          volumeMounts:
            - name: config-file
              mountPath: /home/bee
            - name: data
              mountPath: /home/bee/.bee
            - name: bee-secret
              mountPath: /home/bee/.secret/password
              subPath: password
              readOnly: true
      volumes:
        - name: config-file
          emptyDir: {}
        - name: config
          configMap:
            name: bee-9
        - name: bee-secret
          secret:
            secretName: bee-password
            items:
              - key: password
                path: password
        - name: bee-libp2p
          secret:
            secretName: bee-libp2pkeys
            items:
              - key: libp2pKeys
                path: libp2p.map
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        helm.sh/chart: bee
        app.kubernetes.io/name: bee
        app.kubernetes.io/instance: bee-9
        app.kubernetes.io/version: "1.6.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "34Gi"
      storageClassName: "local-storage"
---
# Source: bee/templates/ingress-debug.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bee-9-0-debug
  namespace: staging
  labels:
    helm.sh/chart: bee-0.12.2
    app.kubernetes.io/name: bee
    app.kubernetes.io/instance: bee-9
    app.kubernetes.io/version: "1.6.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx-internal
  rules:
    - host: bee-9-0-debug.staging.internal
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bee-9-0-debug
                port:
                  name: debug
---
# Source: bee/templates/ingress-debug.yaml
# PER POD INGRESS
---
# Source: bee/templates/service-api.yaml
# MAIN SERVICE
